/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.Controlador;
import java.io.File;
import java.net.URLDecoder;
import javax.swing.filechooser.FileSystemView;
import java.awt.Color;
import java.awt.Component;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListCellRenderer;

/**
 *
 * @author Developer
 */
public class usbFrame extends javax.swing.JFrame {

    /**
     * Creates new form usbFrame
     */
    public usbFrame() {
        initComponents();

//        File[] roots = File.listRoots();
//        System.out.println(roots.length);
//        for (File root : roots) {
//            System.out.println(root);
//            System.out.println(FileSystemView.getFileSystemView().getSystemDisplayName(root));
//        }
        //show();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboBoxUSBList = new javax.swing.JComboBox<>();
        formatearBtn = new javax.swing.JButton();
        subirBtn = new javax.swing.JButton();
        actualizarBtn = new javax.swing.JButton();
        examinarBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        infoText = new javax.swing.JTextArea();
        infoLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(0, 0));

        comboBoxUSBList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Option..." }));

        formatearBtn.setText("Format Driver");
        formatearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formatearBtnActionPerformed(evt);
            }
        });

        subirBtn.setText("Upload File");
        subirBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subirBtnActionPerformed(evt);
            }
        });

        actualizarBtn.setText("Refresh Drivers");

        examinarBtn.setText("Browse");

        jLabel2.setText("SELECT A USB DRIVER");

        infoText.setEditable(false);
        infoText.setColumns(20);
        infoText.setRows(5);
        jScrollPane1.setViewportView(infoText);

        infoLabel.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(465, 465, 465)
                        .addComponent(actualizarBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(comboBoxUSBList, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71)
                        .addComponent(examinarBtn)
                        .addGap(18, 18, 18)
                        .addComponent(formatearBtn)
                        .addGap(18, 18, 18)
                        .addComponent(subirBtn))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(infoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(actualizarBtn)
                .addGap(2, 2, 2)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(comboBoxUSBList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(examinarBtn)
                    .addComponent(formatearBtn)
                    .addComponent(subirBtn))
                .addGap(19, 19, 19)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(infoLabel)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formatearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formatearBtnActionPerformed

        // TODO add your handling code here:
//        String selected = "";
//        if (comboBoxUSBList.getSelectedItem() != null) {
//            System.out.println(comboBoxUSBList.getSelectedItem().toString());
//            selected = comboBoxUSBList.getSelectedItem().toString();
//
//        }
//        String volumenToFormat = Controlador.Volumen(selected);
//        System.out.println("volumen a formatear"+volumenToFormat);
//        if (volumenToFormat == null) {
//            JOptionPane.showMessageDialog(null, "Seleccione otra unidad");
//        } else {
//            System.out.println("probando error");
//            Controlador.formatearMac(volumenToFormat);
//        }


    }//GEN-LAST:event_formatearBtnActionPerformed

    private void subirBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subirBtnActionPerformed
       
    }//GEN-LAST:event_subirBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(usbFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(usbFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(usbFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(usbFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new usbFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton actualizarBtn;
    public javax.swing.JComboBox<String> comboBoxUSBList;
    public javax.swing.JButton examinarBtn;
    public javax.swing.JButton formatearBtn;
    public javax.swing.JLabel infoLabel;
    public javax.swing.JTextArea infoText;
    public javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JButton subirBtn;
    // End of variables declaration//GEN-END:variables

    public class MyCellRenderer extends JLabel implements ListCellRenderer<Object> {

        /**
         *
         */
        private static final long serialVersionUID = 1L;

        /* (non-Javadoc)
	 * @see javax.swing.ListCellRenderer#getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)
         */

        MyCellRenderer() {
            setOpaque(true);
        }

        @Override
        public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected,
                boolean cellHasFocus) {
            setText(" ");
            if (isSelected) {
                setForeground(Color.black);
                setBackground((Color) value);
            } else {
                setForeground(Color.white);
                setBackground((Color) value);
            }
            return this;
        }

    }

}
